<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>fr.dauphine</groupId>
	<artifactId>estage</artifactId>
	<version>1.0.0</version>
	<packaging>war</packaging>
	<name>estage</name>
	<description>Application ESUP-Stage</description>

	<properties>
		<buildname>ROOT</buildname>
		<java.version>11</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

        <!-- environnement local(dev: config interne) et default(config externe) -->
        <profiles>
                <profile>
                        <id>dev</id>
                        <properties>
                                <application.configfilepath>classpath:estage.properties</application.configfilepath>
                        </properties>
                </profile>
                <profile>
                        <id>default</id>
                        <activation><activeByDefault>true</activeByDefault></activation>
                        <properties>
                                <application.configfilepath>file:///etc/${project.name}/estage.properties</application.configfilepath>
                        </properties>
                </profile>
        </profiles>




	<dependencies>
<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter-data-jpa</artifactId>-->
<!--		</dependency>-->
<!--		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>4.0.0</version>
			<scope>provided</scope>
		</dependency> -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
 			<groupId>org.springframework.boot</groupId>
 			<artifactId>spring-boot-starter-tomcat</artifactId>
 			<scope>provided</scope> <!-- This is important. -->
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>

		<dependency>
			<groupId>com.oracle.database.jdbc</groupId>
			<artifactId>ojdbc8</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>${buildname}</finalName>
		<sourceDirectory>src/main/java</sourceDirectory>

		<resources>
			<!-- resources classic -->
                        <resource>
                                <directory>src/main/resources</directory>
                                <filtering>false</filtering>
                        </resource>
                        <!-- interpreter le fichier 'application.properties' -->
                        <resource>
                                <!-- interprete les valeurs en ${xxx} en fonction des attributs maven -->
                                <directory>src/main/resources-filtered</directory>
                                <filtering>true</filtering>
                        </resource>
                </resources>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.6</version>
				<configuration>
					<workingDirectory>src/frontend</workingDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install-node-and-npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v14.17.3</nodeVersion>
						</configuration>
					</execution>
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>npm build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run buildProduction</arguments>
						</configuration>
						<phase>generate-resources</phase>
					</execution>
				</executions>
			</plugin>

			<!-- run tomcat : 'mvn package cargo:run' -->
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.8.3</version>
				<configuration>
					<container>
						<containerId>tomcat9x</containerId>
						<type>embedded</type>
					</container>
					<deployables>
						<deployable>
							<type>war</type>
							<location>${project.build.directory}/${project.build.finalName}.war</location>
							<properties>
								<context>/</context>
							</properties>
						</deployable>
					</deployables>
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>
