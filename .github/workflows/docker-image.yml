name: Docker Image CI

on:
  push:
    branches: [ "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v3.14.1
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Clean npm environment > cache + modules + lock
        run: |
          cd src/frontend
          rm -rf node_modules package-lock.json
          npm cache clean --force

      - name: Install npm dependencies (sans dÃ©pendances optionnelles)
        run: |
          cd src/frontend
          npm install

      - name: Build Angular app
        run: |
          cd src/frontend
          npm run buildProduction

      - name: Get Maven version and build
        if: ${{github.ref == 'refs/heads/main'}}
        id: maven_version_main
        run: | 
          echo "version=$(mvn help:evaluate -Dexpression='project.version' -q -DforceStdout -Dsha1=-${GITHUB_SHA::7} -Dchangelist=)" >> $GITHUB_OUTPUT
          mvn -Dsha1=-${GITHUB_SHA::7} -Dchangelist= clean package -DskipTests -Dskip.npm.install=true -Dskip.frontend=true --no-transfer-progress

      - name: Get Maven version and build
        if: ${{github.ref != 'refs/heads/main'}}
        id: maven_version
        run: | 
          echo "version=$(mvn help:evaluate -Dexpression='project.version' -q -DforceStdout -Dsha1=-${GITHUB_SHA::7} -Dchangelist=-${GITHUB_REF##*/})" >> $GITHUB_OUTPUT
          mvn -Dsha1=-${GITHUB_SHA::7} -Dchangelist=-${GITHUB_REF##*/} clean package -DskipTests -Dskip.npm.install=true -Dskip.frontend=true --no-transfer-progress

      - name: Log in to Harbor
        uses: docker/login-action@v2
        with:
          registry: ${{secrets.HARBOR_URL}}
          username: ${{secrets.HARBOR_USERNAME}}
          password: ${{secrets.HARBOR_PASSWORD}}

      - name: Build and Push the Docker image
        run: |
          docker build --build-arg VERSION=${{steps.maven_version.outputs.version}} -t ${{secrets.HARBOR_URL}}/esup-stage/esup-stage:latest-dev -t ${{secrets.HARBOR_URL}}/esup-stage/esup-stage:${{steps.maven_version.outputs.version}} .
          docker push ${{secrets.HARBOR_URL}}/esup-stage/esup-stage:latest-dev
          docker push ${{secrets.HARBOR_URL}}/esup-stage/esup-stage:${{steps.maven_version.outputs.version}}

      - name: Summary
        run: |
          echo "## ðŸ“¦ Image Docker publiÃ©e" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Repo | Nom | Tag | Image |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------------------------------|----------|------------------|" >> $GITHUB_STEP_SUMMARY
          echo "| \`$IMAGE_REPO\` | \`$IMAGE_NAME\` | \`$IMAGE_TAG\` | \`$IMAGE_REPO\`\`$IMAGE_NAME\`:\`$IMAGE_TAG\` |" >> $GITHUB_STEP_SUMMARY
          echo "| \`$IMAGE_REPO\` | \`$IMAGE_NAME\` | latest | \`$IMAGE_REPO\`\`$IMAGE_NAME\`:latest |" >> $GITHUB_STEP_SUMMARY
        env:
          IMAGE_REPO: ${{env.IMAGE_REPO}}
          IMAGE_NAME: ${{env.IMAGE_NAME}}
          IMAGE_TAG: ${{steps.maven_version.outputs.version}}